trigger:
  # start a new build for every push
  batch: False
  branches:
    include:
      - master
      - maintenance/*

pr:
  branches:
    include:
    - '*'  # must quote since "*" is a YAML reserved character; we want a string

stages:
- stage: InitialTests
  jobs:
  - job: WindowsFast
    pool:
      vmImage: 'VS2017-Win2016'
    strategy:
      matrix:
          Python36-64bit-fast:
            PYTHON_VERSION: '3.6'
            PYTHON_ARCH: 'x64'
            TEST_MODE: fast
            BITS: 64
    steps:
    - template: azure-steps-windows.yml

- stage: ComprehensiveTests
  jobs:
  - job: Windows
    pool:
      vmImage: 'VS2017-Win2016'
    strategy:
      maxParallel: 6
      matrix:
          Python36-64bit-full:
            PYTHON_VERSION: '3.6'
            PYTHON_ARCH: 'x64'
            TEST_MODE: full
            BITS: 64
          Python37-64bit-full:
            PYTHON_VERSION: '3.7'
            PYTHON_ARCH: 'x64'
            TEST_MODE: full
            BITS: 64
          Python38-64bit-full:
            PYTHON_VERSION: '3.8'
            PYTHON_ARCH: 'x64'
            TEST_MODE: full
            BITS: 64
            NPY_USE_BLAS_ILP64: '1'
            OPENBLAS_SUFFIX: '64_'
          Python39-64bit-full:
            PYTHON_VERSION: '3.9'
            PYTHON_ARCH: 'x64'
            TEST_MODE: full
            BITS: 64
            NPY_USE_BLAS_ILP64: '1'
            OPENBLAS_SUFFIX: '64_'
          #PyPy36-32bit:
            #PYTHON_VERSION: 'PyPy3.6'
            #PYTHON_ARCH: 'x32'
            #TEST_MODE: fast
            #BITS: 32
    steps:
    - template: azure-steps-windows.yml
  - job: Linux_PyPy3
    pool:
      vmIMage: 'ubuntu-18.04'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: pypy3
    - script: |
        python -c "import sys; print(sys.version)"
        python -m pip install --upgrade "setuptools<49.2.0"
        python -m pip install urllib3
        python -m pip install -r test_requirements.txt
        basedir=$(python ./tools/openblas_support.py)
        sudo cp -r $basedir/lib/* /usr/local/lib
        sudo cp $basedir/include/* /usr/local/include
        sudo ldconfig /usr/local/lib
      displayName: 'Get OpenBLAS'
    - script: |
        python setup.py build_src --verbose-cfg bdist_wheel 
        # do the rest in a subdirectory so 'import numpy' works
        pushd dist
        python -mpip install ./numpy*
        python ../tools/openblas_support.py --check_version
        popd
      displayName: 'Build, check OpenBLAS version'
    - script: |
        python runtests.py --debug-info --show-build-log -v -- -rsx \
                --junitxml=junit/test-results.xml --durations 10 
      displayName: 'Test'
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: '**/test-*.xml'
        testRunTitle: 'Publish test results for PyPy3'
        failTaskOnFailedTests: true
  - job: Linux_gcc48
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
    - script: |
            if ! `gcc-4.8 2>/dev/null`; then
                sudo apt install gcc-4.8
            fi
      displayName: 'add gcc 4.8'
    - script: |
            # python3 has no setuptools, so install one to get us going
            python3 -m pip install --user --upgrade pip 'setuptools<49.2.0'
            python3 -m pip install --user -r test_requirements.txt
            CPPFLAGS='' CC=gcc-4.8 F77=gfortran-5 F90=gfortran-5 \
            python3 runtests.py --debug-info --mode=full -- -rsx --junitxml=junit/test-results.xml
      displayName: 'Run gcc4.8 Build / Tests'
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: '**/test-*.xml'
        failTaskOnFailedTests: true
        testRunTitle: 'Publish test results for gcc 4.8'
